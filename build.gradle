plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.10.0"
    id "io.freefair.lombok" version "6.0.0-m2"
    id 'org.gradle.test-retry' version '1.0.0'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.20.0",
    restAssuredVersion = '5.3.0',
    junitVersion = "5.9.0",
    slf4jVersion = '2.0.5',
    assertJVersion = "3.23.1",
    aspectjVersion = "1.9.9.1"

        allure
{
    report {
        version.set(allureVersion)
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    implementation(

            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aspectj:aspectjweaver:$aspectjVersion",
            'com.github.javafaker:javafaker:1.0.2',
            'com.codeborne:selenide:6.10.0',
            "io.qameta.allure:allure-selenide:$allureVersion"
    )
}

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    retry {
        maxRetries = 0
        maxFailures = 20
        failOnPassedAfterRetry = true
    }

    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}